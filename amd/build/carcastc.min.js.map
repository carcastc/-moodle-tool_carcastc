{"version":3,"sources":["../src/carcastc.js"],"names":["SELECTORS","DELETE_ROW","ID_ROW","COURSE_ID","ID_TEMPLATE","confirmDelete","element","reloadElement","pendingPromise","Pending","component","then","strings","Notification","confirm","pendingPromiseDelete","idRow","getAttribute","courseid","requestWs","methodname","args","id","response","Templates","render","html","innerHTML","toString","resolve","catch","exception","requests","Ajax","call","init","document","addEventListener","event","triggerElement","target","closest","getElementById","preventDefault"],"mappings":"0NAuBA,OACA,OAEA,OACA,O,sDAEMA,CAAAA,CAAS,CAAG,CACdC,UAAU,CAAE,6BADE,CAEdC,MAAM,CAAE,YAFM,CAGdC,SAAS,CAAE,eAHG,CAIdC,WAAW,CAAE,yBAJC,C,CAaZC,CAAa,CAAG,SAACC,CAAD,CAAUC,CAAV,CAA4B,CAC9C,GAAMC,CAAAA,CAAc,CAAG,GAAIC,UAAJ,CAAY,sCAAZ,CAAvB,CACA,kBAAW,CACP,CAAC,IAAO,SAAR,CADO,CAEP,CAAC,IAAO,kBAAR,CAA4BC,SAAS,CAAE,eAAvC,CAFO,CAGP,CAAC,IAAO,KAAR,CAHO,CAIP,CAAC,IAAO,IAAR,CAJO,CAAX,EAMCC,IAND,CAMM,SAAAC,CAAO,CAAI,CACb,MAAOC,WAAaC,OAAb,CAAqBF,CAAO,CAAC,CAAD,CAA5B,CAAiCA,CAAO,CAAC,CAAD,CAAxC,CAA6CA,CAAO,CAAC,CAAD,CAApD,CAAyDA,CAAO,CAAC,CAAD,CAAhE,CAAqE,UAAW,IAC7EG,CAAAA,CAAoB,CAAG,GAAIN,UAAJ,CAAY,wCAAZ,CADsD,CAE7EO,CAAK,CAAGV,CAAO,CAACW,YAAR,CAAqBjB,CAAS,CAACE,MAA/B,CAFqE,CAG7EgB,CAAQ,CAAGZ,CAAO,CAACW,YAAR,CAAqBjB,CAAS,CAACG,SAA/B,CAHkE,CAQnFgB,CAAS,CAJQ,CACb,CAAEC,UAAU,CAAE,0BAAd,CAA0CC,IAAI,CAAE,CAACC,EAAE,CAAEN,CAAL,CAAhD,CADa,CAEb,CAAEI,UAAU,CAAE,4BAAd,CAA4CC,IAAI,CAAE,CAACH,QAAQ,CAAEA,CAAX,CAAlD,CAFa,CAIR,CAAT,CAAoB,CAApB,EACCP,IADD,CACM,SAAAY,CAAQ,QAAIC,WAAUC,MAAV,CAAiB,yBAAjB,CAA4CF,CAA5C,CAAJ,CADd,EAECZ,IAFD,CAEM,SAACe,CAAD,CAAU,CACZnB,CAAa,CAACoB,SAAd,CAA0BD,CAAI,CAACE,QAAL,EAC7B,CAJD,EAKCjB,IALD,CAKMI,CAAoB,CAACc,OAL3B,EAMCC,KAND,CAMOjB,UAAakB,SANpB,CAOH,CAfM,CAgBV,CAvBD,EAwBCpB,IAxBD,CAwBMH,CAAc,CAACqB,OAxBrB,EAyBCC,KAzBD,CAyBOjB,UAAakB,SAzBpB,CA0BH,C,CASKZ,CAAS,CAAG,SAACa,CAAD,CAAc,CAC5B,MAAOC,WAAKC,IAAL,CAAUF,CAAV,CACV,C,QAOmB,QAAPG,CAAAA,IAAO,EAAM,CACtBC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAAAC,CAAK,CAAI,IAClCC,CAAAA,CAAc,CAAGD,CAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBzC,CAAS,CAACC,UAA/B,CADiB,CAElCM,CAAa,CAAG6B,QAAQ,CAACM,cAAT,CAAwB1C,CAAS,CAACI,WAAlC,CAFkB,CAGxC,GAAImC,CAAJ,CAAoB,CAChBD,CAAK,CAACK,cAAN,GACAtC,CAAa,CAACkC,CAAD,CAAiBhC,CAAjB,CAChB,CACJ,CAPD,CAQH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module ES6 for tool_carcarstc\n *\n * @package   tool_carcastc\n * @copyright 2021, Carlos Castillo <carlos.castillo@moodle.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport Pending from \"core/pending\";\nimport {get_strings as getStrings} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport Templates from \"core/templates\";\n\nconst SELECTORS = {\n    DELETE_ROW: '[data-action=\"deleterow\"]',\n    ID_ROW: 'data-rowid',\n    COURSE_ID: 'data-courseid',\n    ID_TEMPLATE: 'tool_carcastc_rows_list',\n};\n\n/**\n * Display confirmation dialogue on delete row\n *\n * @param {Object} element\n * @param {Object} reloadElement to reload after template render\n */\nconst confirmDelete = (element, reloadElement) => {\n    const pendingPromise = new Pending('tool_carcastc/carcastc:confirmDelete');\n    getStrings([\n        {'key': 'confirm'},\n        {'key': 'confirmdeleterow', component: 'tool_carcastc'},\n        {'key': 'yes'},\n        {'key': 'no'},\n    ])\n    .then(strings => {\n        return Notification.confirm(strings[0], strings[1], strings[2], strings[3], function() {\n            const pendingPromiseDelete = new Pending('tool_carcastc/carcastc:requestWsDelete');\n            const idRow = element.getAttribute(SELECTORS.ID_ROW);\n            const courseid = element.getAttribute(SELECTORS.COURSE_ID);\n            const requests = [\n                { methodname: 'tool_carcastc_delete_row', args: {id: idRow} },\n                { methodname: 'tool_carcastc_display_rows', args: {courseid: courseid} }\n            ];\n            requestWs(requests)[1]\n            .then(response => Templates.render('tool_carcastc/rows_list', response))\n            .then((html) => {\n                reloadElement.innerHTML = html.toString();\n            })\n            .then(pendingPromiseDelete.resolve)\n            .catch(Notification.exception);\n        });\n    })\n    .then(pendingPromise.resolve)\n    .catch(Notification.exception);\n};\n\n/**\n * Handle ajax requests.\n *\n * @method requestWs\n * @param {{any}} requests The method.\n * @return {promise} Resolved with ajax request\n */\nconst requestWs = (requests) => {\n    return Ajax.call(requests);\n};\n\n/**\n * Method called when the confirmation delete event occur\n *\n * @method init\n */\nexport const init = () => {\n    document.addEventListener('click', event => {\n        const triggerElement = event.target.closest(SELECTORS.DELETE_ROW);\n        const reloadElement = document.getElementById(SELECTORS.ID_TEMPLATE);\n        if (triggerElement) {\n            event.preventDefault();\n            confirmDelete(triggerElement, reloadElement);\n        }\n    });\n};\n"],"file":"carcastc.min.js"}